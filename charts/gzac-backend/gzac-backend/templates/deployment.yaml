apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gzac-backend.fullname" . }}
  labels:
    {{- include "gzac-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  progressDeadlineSeconds: 120
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "gzac-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "gzac-backend.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gzac-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ .Values.existingSecret | default (include "gzac-backend.fullname" .) }}
            - configMapRef:
                name: {{ include "gzac-backend.fullname" . }}
          env:
            {{- if .Values.extraEnvVars }}
            {{- include "gzac-backend.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8081
              protocol: TCP
          startupProbe:
            httpGet:
              path: /api/v1/ping
              port: 8081
            # If app does not start after 15 minutes, fail the startup probe
            failureThreshold: 90
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/v1/ping
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 40
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/v1/ping
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 20
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "gzac-backend.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
      volumes:
        - name: media
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "gzac-backend.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: { }
        {{- if .Values.extraVolumes }}
        {{- include "gzac-backend.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
