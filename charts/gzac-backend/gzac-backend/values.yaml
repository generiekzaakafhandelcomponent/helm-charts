# Default values for gzac-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
tags:
  # -- Deploy a PostgreSQL instance
  postgresql: true
  # -- Deploy a MySQL instance
  mysql: false
  # -- Deploy a Keycloak instance
  keycloak: true

# -- Amount of replicas running the gzac-backend
replicaCount: 1

image:
  # -- Domain of the image repository
  repository: "ritense/gzac-backend"
  # -- Pull policy for the image
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: 12.2.1

# -- Image pull secrets
imagePullSecrets: []
# -- Name override for gzac-backend
nameOverride: ""
# -- String to fully override gzac-backend.fullname
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for gzac-backend pods
podAnnotations: {}

# -- Labels for gzac-backend pods
podLabels: {}

podSecurityContext: 
  # -- Set gzac-backend's pod security fsGroup
  fsGroup: 1000

securityContext: 
  capabilities:
    # -- gzac-backend's container security context capabilities to be dropped
    drop:
    - ALL
  # -- gzac-backend's container security context readOnlyRootFilesystem
  readOnlyRootFilesystem: false
  # -- Run gzac-backend containers as non-root
  runAsNonRoot: true
  # -- Run gzac-backend containers under this user-ID
  runAsUser: 1000

service:
  # -- gzac-backend service type
  type: ClusterIP
  # -- gzac-backend service port
  port: 80

ingress:
  # -- Expose the gzac-backend UI through an ingress
  enabled: false
  # -- Ingress Class which will be used to implement the Ingress
  ingressClassName: ""
  # -- Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Hosts at which Valtimo/GZAC can be reached.
  #    Note: several URLs are inferred from the FIRST entry in this list.
  hosts: ["gzac.example.com"]
  # -- TLS configuration
  tls: []

startupProbe:
  # -- Startup probe endpoint and parameters
  # If app does not start after 15 minutes, fail the startup probe
  httpGet:
    path: /api/v1/ping
    port: 8080
  failureThreshold: 90
  periodSeconds: 10
livenessProbe:
  httpGet:
    path: /api/v1/ping
    port: 8080
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 10
  # -- Period seconds for livenessProbe
  periodSeconds: 40
  # -- Failure threshold for livenessProbe
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /api/v1/ping
    port: 8080
  # -- Initial delay seconds for readinessProbe
  initialDelaySeconds: 10
  # -- Period seconds for readinessProbe
  periodSeconds: 20
  # -- Failure threshold for readinessProbe
  failureThreshold: 3

# -- Resources for gzac-backend
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Enable/disable autoscaling for the gzac-backend deployment
  enabled: false
  # -- Minimum replicas for the gzac-backend deployment
  minReplicas: 1
  # -- Maximum replicas for the gzac-backend deployment
  maxReplicas: 100
  # -- gzac-backend Deployment autoscaling target CPU percentage
  targetCPUUtilizationPercentage: 80
  # -- gzac-backend Deployment autoscaling target Mem utilization percentage
  targetMemoryUtilizationPercentage: 80

# -- Node labels for gzac-backend pods assignment
nodeSelector: {}

# -- Tolerations for gzac-backend pods assignment
tolerations: []

# -- Affinity for gzac-backend pods assignment
affinity: {}

# -- Array with extra environment variables to add
extraEnvVars: []
# e.g:
# extraEnvVars:
#   - name: FOO
#     value: "bar"

# -- Optionally specify extra list of additional volumes
extraVolumes: []
# e.g:
# extraVolumes:
#   - name: verify-certs
#     configMap:
#       name: verify-certs

# -- Optionally specify extra list of additional volumeMounts
extraVolumeMounts: []
# e.g:
# extraVolumeMounts:
#  - name: verify-certs
#    mountPath: /etc/ssl/certs/extra-certs/

# -- Refer to an existing secret to avoid managing secrets through Helm.
existingSecret: null

persistence:
  # -- Enable/disable persistent volumes for Gzac-backend
  enabled: false
  annotations: {}
  # -- persistence.size Size of data volume
  size: 1Gi
  # -- persistence.storageClassName Storage class of backing PVC
  # -- If defined, storageClassName: <storageClassName>
  # -- If set to "-", storageClassName: "", which disables dynamic provisioning
  # -- If undefined (the default) or set to null, no storageClassName spec is
  # -- set, choosing the default provisioner.  (gp2 on AWS, standard on
  # -- GKE, AWS & OpenStack)
  # --
  storageClassName: ""
  # -- persistence.existingClaim The name of an existing PVC to use for persistence
  existingClaim: null
  # -- persistence.mountPath Path to mount the volume at.
  mountPath: /tmp

settings:

  spring: 
    profiles:
      # -- Activated Spring profiles
      active: "cloud"
    actuator: 
      # -- Username to access the Spring actuator endpoint
      username: "admin"
      # -- Password to access the Spring actuator endpoint.
      # Or, if using existingSecret: `SPRINGACTUATOR_PASSWORD`
      password: ""
    datasource: 
      # -- URL for the database
      url: 
      # -- Username for the database
      username: 
      # -- Password for the database.
      # Or, if using existingSecret: `SPRINGACTUATOR_PASSWORD`
      password: ""
    
  keycloak: 
    # -- Required: Plain URL of Keycloak
    authServerURL: 
    # -- Required: Keycloak realm
    realm:
    # -- Client-ID to connect with Keycloak
    clientID: valtimo-user-m2m-client
    # -- Client-ID for using Valtimo with Keycloak client roles.
    # More info: https://docs.valtimo.nl/running-valtimo/application-configuration/configuring-keycloak#client-roles
    # Set to `null` to disable client roles entirely and use realm roles instead.
    clientRoleID: valtimo-console

    # -- Client-Secret to connect with Keycloak.
    # Or, if using existingSecret: `KEYCLOAK_CREDENTIALS_SECRET` and `SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAKAPI_CLIENTSECRET` (must set both)
    clientSecret: ""

    # -- Required: Keycloak's Public Key used to verify signature of JWTs.
    # In Keycloak, this can be found under (in the realm you're using): 'Realm settings' -> 'Keys'. 
    # Use the public key with Use: 'SIG' and Provider: 'rsa-generated'.
    publicKey: ""

    # -- Required: Keycloak version you are running against
    version: ""
  
    # -- Optional: Override Keycloak's HTTP relative path. Leave empty for default.
    #    For Keycloak < 17, default is "/auth"; for >= 17, default is "".
    httpRelativePath:


  gzac:
    # -- Type of database to use (can by either 'postgres' or 'mysql')
    databaseType: "postgres"
    # -- Optional: The hostname which exposes gzac-backend
    # -- Defaults to https://<ingress.hosts[0]>
    appHostName: 
    # -- The port on which gzac-backend is listening
    serverPort: 8080
    # -- Encryption secret
    # Or, if using existingSecret: `VALTIMO_CONNECTORENCRYPTION_SECRET`
    connectorEncryptionSecret: ""
    # -- Required if using Valtimo/GZAC plugins: Plugin encryption secret. Must be exactly 16, 24 or 32 bytes.
    # Or, if using existingSecret: `VALTIMO_PLUGIN_ENCRYPTIONSECRET`
    pluginEncryptionSecret: ""
    # -- Explicit API URL. When unset, it falls back to https://<ingress.hosts[0]>/api/v1
    apiUrl:

    # -- Feature flags
    features:
      drafts:
        enabled: true

  operaton: 
    # -- Default Operaton admin user
    adminUserID: "admin"
    # -- Default Operaton admin password. 
    # Or, if using existingSecret: `OPERATON_BPM_ADMINUSER_PASSWORD`
    adminUserPassword: ""

